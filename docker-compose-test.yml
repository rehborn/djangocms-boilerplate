version: '3.5'

volumes:
  static:

services:
  reverse-proxy:
    image: traefik:latest
    ports:
      - "80:80"
      - "127.0.0.1:8080:8080"
    volumes:
      # - ./traefik.local.yml:/etc/traefik/traefik.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--api.insecure=true"  # Enable insecure mode for API
      - "--providers.docker=true"  # Enable Docker provider
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "2"

  cms:
    build:
      context: .
    image: rehborn/djangocms-boilerplate:latest
    volumes:
      - /srv/cms/config:/app/config/
      - /srv/cms/media:/app/media/
    restart: always
    ports:
      - "8000:8000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.cms.rule=Host(`test.local`) && PathPrefix(`/`)
    depends_on:
      - reverse-proxy
      - postgres
      - redis

  static:
    image: nginx:latest
    volumes:
      - static:/usr/share/nginx/html/static/
      - /srv/cms/media:/usr/share/nginx/html/media/
    labels:
      - traefik.enable=true
      - traefik.http.routers.static.rule=Host(`test.local`) && PathPrefix(`/static/`)
      - traefik.http.routers.media.rule=Host(`test.local`) && PathPrefix(`/media/`)
    depends_on:
      - reverse-proxy

  job-once:
    image: rehborn/djangocms-boilerplate:latest
    command: >
      poetry run python /app/manage.py collectstatic --noinput && 
      poetry run python /app/manage.py boil
    volumes:
      - /srv/cms/config:/app/config
      - static:/app/static/
    depends_on:
      - postgres
      - redis
    restart: on-failure

  job-migrate:
    image: rehborn/djangocms-boilerplate:latest
    command: poetry run python /app/manage.py migrate
    volumes:
      - /srv/cms/config:/app/config
    depends_on:
      - postgres
      - redis
    restart: 'no'

  postgres:
    image: postgres:12
    volumes:
    - /srv/cms/postgres/:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always

  redis:
    image: redis:7
    restart: always
